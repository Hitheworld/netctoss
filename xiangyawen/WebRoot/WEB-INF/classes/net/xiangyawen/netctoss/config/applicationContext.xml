<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd     
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	
	<bean name="mydatasource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/netctoss?characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;transformedBitIsBoolean=true"></property>
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
	</bean>
	<!-- Spring中生成一个sqlsessionfactorybean对象 -->
	<bean name="sqlsessionfactorybean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mydatasource"></property>
		<property name="mapperLocations" value="classpath:net/xiangyawen/netctoss/entity/*.xml"></property>
	</bean>
	
	<!-- 根据MapperDao生成dao对象实例 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="net.xiangyawen.netctoss.dao"></property>
		<!-- 指定@MyBatisDao所在位置 -->
		<property name="annotationClass" value="net.xiangyawen.netctoss.util.MyBatisDao"></property>
		<!-- 自动注入sqlsessionfactorybean -->
	</bean>
	
	
	<!-- SpringMVC -->
	<context:component-scan base-package="net.xiangyawen.netctoss"></context:component-scan>
	
	<mvc:annotation-driven/>
	
	<!-- 将拦截的静态资源js,css放行
	解决RSTful架构后，静态资源的访问  -->
	<mvc:default-servlet-handler />
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	 <!-- 拦截器 -->
	<!--  
	<mvc:interceptors>
	 	<mvc:interceptor>
	 		<mvc:mapping path="/**"/>
	 		<mvc:exclude-mapping path="/login/*"/>
	 		<mvc:exclude-mapping path="/images/*"/>
	 		<mvc:exclude-mapping path="/styles/*"/>
	 		<mvc:exclude-mapping path="/js/*"/>
	 		<bean class="net.xiangyawen.netctoss.interceptor.LoginInterceptor"></bean>
	 	</mvc:interceptor>
	 </mvc:interceptors>
	 -->
	 
	 
	 <!-- 事务控制
	@Transactional
	属性:
	propagation 设置事务传播
	isolation   设置事务隔离级别
	readOnly    设置为只读，还是可读写
	rollbackFor 设置遇到哪些异常必须回滚
	noRollbackFor 设置遇到哪些异常不回滚
	默认属性是:
	事务传播设置是:PROPAGATION_REQUIRED
	事务隔离级别是:ISOLATION_DEFAULT
	事务是 读/写
	事务超时默认是依赖于事务系统的，或者事务超时没有被支持
	任何RuntimeException 将触发事务回滚，但任何Checked Exception 将不触发事务回滚
	 
	 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mydatasource"></property>
	</bean>
	<!-- 为了支持@Transactional 可以在方法前定义也可以在类的前面定义 -->
	<tx:annotation-driven transaction-manager="txManager" />
	 
</beans>